version: "3.7"
services:
  rabbitmq:
    container_name: rabbitmq_service
    image: "rabbitmq:3-management"
    ports:
      - "15672:15672"
      - "5672:5672"
    volumes:
      - rabbitmq:/var/lib/rabbitmq
  api:
    container_name: api_service
    depends_on:
      - mysql
      - rabbitmq
    restart: on-failure
    build: ./api/
    environment:
      MYSQL_URL: mysql
      PORT: 5000
      DB_USER: user
      DB_PASSWORD: root
      RABBITMQ_URL: amqp://rabbitmq
    ports:
      - 5000:5000
  film-collector:
    depends_on:
      - mysql
      - rabbitmq
    container_name: film-collector_service
    build: ./film-collector/
    restart: on-failure
    environment:
      MYSQL_URL: mysql
      DB_USER: user
      DB_PASSWORD: root
      RABBITMQ_URL: amqp://rabbitmq
  mailer:
    container_name: mailer_service
    build: ./mailer/
    restart: on-failure
    environment:
      RABBITMQ_URL: amqp://rabbitmq
    depends_on:
      - rabbitmq
  logger:
    container_name: logger_service
    build: ./logger/
    restart: on-failure
    environment:
      RABBITMQ_URL: amqp://rabbitmq
      MONGO_URI: mongodb://mongo/cinema-logs
    depends_on:
      - rabbitmq
      - mongo
  mysql:
    container_name: mysql_service
    image: mysql
    restart: always
    environment:
      MYSQL_DATABASE: cinema_db
      MYSQL_USER: user
      MYSQL_PASSWORD: root
      MYSQL_ROOT_PASSWORD: root
    ports:
      - 3307:3306
    volumes:
      - mysql:/var/lib/mysql
  mongo:
    container_name: mongo_service
    image: mongo
    restart: always
    ports:
      - 27017:27017
    volumes:
      - mongo:/data/db

volumes:
  mysql:
  rabbitmq:
  mongo:
